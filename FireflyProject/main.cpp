//
//  main.cpp
//  FireflyProject
//
//  Created by Keisuke Karijuku on 2013/10/21.
//  Copyright (c) 2013å¹´ Keisuke Karijuku. All rights reserved.
//

//many thanks for your kind attention.


#include <iostream>
#include <fstream>
#include "FireflyRBFTraining.h"
#include "Wave.h"
#include "analysis.h"

double weights[][2] = {{0.263923, -0.329463}, {-0.150784, 0.0760735}, {-0.0509168, -0.236309}, {0.0229266, 0.2203}, {-0.224887, -0.238146}, {-0.188493, -0.0407175}, {-0.436724, 0.242635}, {-0.0386196, 0.149308}, {0.446531, -0.0716804}, {0.223659, -0.062506}, {0.425775, -0.405208}, {0.0324452, -0.0106207}, {-0.0149844, -0.203732}, {-0.602427, -0.293522}, {-0.221075, -0.0924609}, {0.225202, -0.256198}, {0.0289955, -0.0692625}, {0.00857348, 0.279496}, {-0.0892499, 0.373834}, {-0.0895456, 0.0391065}, {-0.166062, -0.0541265}, {-0.0562313, -0.162059}, {0.03293, -0.287097}, {0.170517, -0.169223}, {0.313944, 0.332815}, {-0.0375998, 0.221229}, {0.270758, -0.520688}, {-0.0149739, 0.281704}, {0.0249447, 0.392901}, {-0.217657, 0.465618}, {0.132543, -0.222656}, {0.213737, 0.050382}, {0.405256, -0.345336}, {-0.239077, 0.0547092}, {-0.0996391, 0.165529}, {0.147606, 0.261269}, {0.368179, 0.496601}, {-0.569416, 0.127516}, {-0.522184, -0.0485301}, {-0.244259, -0.236047}, {0.0269923, -0.29123}, {0.141832, -0.142678}, {-0.316974, 0.22153}, {-0.105842, 0.50657}, {0.34898, -0.019725}, {-0.236707, -0.189937}, {0.348743, -0.230721}, {0.478511, 0.292827}, {0.122257, -0.0864224}, {-0.0294013, 0.854267}, {-0.226434, 0.419266}, {0.175097, 0.304709}, {0.489839, -0.100981}, {-0.0548316, 0.387791}, {-0.186629, 0.186167}, {0.144562, -0.237296}, {-0.283417, 0.16713}, {0.0454634, -0.334185}, {0.0330534, 0.0715787}, {-0.0517448, 0.100397}, {0.0017163, 0.178799}, {-0.0155429, 0.0641543}, {-0.0179834, 0.300551}, {-0.0677225, 0.0447639}, {-0.492895, 0.0200642}, {-0.197401, -0.0609757}, {0.0704261, -0.147304}, {-0.256232, -0.394771}, {0.256082, 0.458229}, {0.261814, -0.00100136}, {0.482325, -0.2682}, {0.3053, -0.431385}, {-0.0674438, 0.185932}, {-0.126233, 0.469726}, {0.214606, 0.149606}, {0.156325, -0.303455}, {0.135864, -0.153261}, {-0.308674, 0.131477}, {0.495213, 0.229312}, {0.0760454, -0.594549}, {-0.177292, 0.12467}, {-0.261203, 0.200687}, {0.273363, 0.0047702}, {-0.524366, -0.229984}, {0.243948, 0.258108}, {-0.289088, -0.299972}, {-0.268471, 0.0875947}, {0.598948, -0.0295705}, {0.341399, 0.251363}, {-0.0728454, 0.18211}, {0.468226, -0.0251314}, {0.177575, 0.464426}, {0.133301, -0.0934778}, {-0.0429716, -0.173881}, {0.0739576, -0.297687}, {-0.432342, -0.243022}, {-0.310357, 0.000713448}, {-0.412692, -0.320587}, {-0.0767009, 0.0275961}, {0.183585, -0.0215391}, {0.180839, 0.132018}, {0.806484, 0.567865}, {-0.155464, 0.404549}, {0.0245099, 0.436827}, {0.0178776, 0.263841}, {-0.0535265, -0.267376}, {-0.0246797, 0.0614051}, {-0.395728, 0.0993803}, {0.0732325, 0.0395035}, {0.222505, 0.189303}, {-0.195721, 0.645064}, {0.171814, 0.179876}, {-0.254728, -0.63141}, {0.0827042, -0.699577}, {-0.564117, -0.0721473}, {-0.181405, 0.435727}, {-0.320179, -0.136194}, {-0.0958781, 0.416243}, {0.0821077, -0.116621}, {0.0258605, 0.0387995}, {0.431651, -0.0690827}, {0.308235, 0.0496306}, {0.202322, -0.298917}, {-0.207158, -0.116203}, {0.282831, 0.813418}, {-0.1801, 0.388787}, {0.077304, 0.349974}, {0.0977519, 0.146553}, {-0.331784, -0.242731}, {0.310672, 0.0586694}, {-0.107013, 0.0232218}, {-0.370584, 0.168138}, {-0.249525, 0.0967901}, {0.316207, -0.00534433}, {0.0697758, -0.0605407}, {0.0948024, 0.205182}, {0.213368, 0.413219}, {-0.0323654, -0.435188}, {0.034359, -0.0312652}, {-0.22671, -0.623956}, {0.194986, -0.0841606}, {-0.0663162, 0.277646}, {-0.0329084, -0.470125}, {0.150692, 0.119572}, {0.387317, 0.17907}, {0.0642003, 0.00494686}, {0.10558, -0.304405}, {-0.193351, 0.183088}, {0.345885, -0.540679}, {-0.129255, 0.180366}, {-0.374326, 0.46712}, {-0.150629, -0.0378689}, {-0.525672, 0.159718}, {-0.20987, -0.160342}, {-0.159137, -0.322169}, {-0.181164, -0.0757454}, {-0.283584, -0.148052}, {-0.381647, 0.339588}, {-0.0472504, -0.172429}, {0.181705, 0.36362}, {-0.422481, 0.136342}, {0.531659, 0.310344}, {-0.137785, 0.760545}, {0.191414, -0.0844379}, {-0.0380264, -0.322449}, {-0.506887, 0.169907}, {0.200665, -0.323761}, {0.435801, 0.231066}, {0.25384, -0.294915}, {0.0296198, 0.188788}, {0.136421, -0.284076}, {0.221736, 0.200531}, {0.00973455, -0.422212}, {0.253408, 0.408264}, {-0.413051, 0.0050561}, {-0.154888, -0.366503}, {0.32895, 0.334316}, {-0.200753, 0.221713}, {0.441736, 0.312154}, {-0.0406116, 0.46088}, {0.295195, -0.203432}, {-0.0146877, 0.121625}, {0.672224, -0.078741}, {-0.04495, 0.255922}, {-0.0285691, 0.0438301}, {-0.0626222, -0.301846}, {0.321041, 0.0775274}, {-0.168837, 0.333312}, {-0.253809, 0.266884}, {-0.00751445, 0.543121}, {-0.0394267, -0.0670108}, {0.156803, 0.0212985}, {0.237092, 0.276577}, {0.21196, 0.220011}, {-0.510933, 0.784355}, {-0.269262, 0.208683}, {-0.163126, -0.117058}, {-0.620309, -0.191811}, {-0.227385, 0.093431}, {0.600187, 0.464285}, {0.245335, -0.157689}, {-0.646907, 0.246352}, {-0.0197522, -0.0991815}, {-0.575759, 0.949408}, {0.0470571, -0.416802}, {0.435685, -0.434007}, {0.146802, -0.119359}, {0.397302, 0.119134}, {0.140439, -0.169539}, {-0.368164, -0.121929}, {0.201315, -0.186103}, {-0.300993, -0.435825}, {0.141486, -0.464267}, {0.196307, 0.290619}, {-0.0434734, 0.136529}, {0.211495, -0.126468}, {-0.0263, -0.0354182}, {-0.551497, 0.154172}, {-0.0791957, -0.384812}, {-0.0102502, 0.127517}, {-0.075274, -0.589952}, {0.186507, -0.109673}, {-0.205014, -0.356}, {0.0320742, 0.135525}, {0.320143, -0.0883895}, {0.15316, -0.32517}, {-0.382647, 0.103684}, {-0.207092, -0.0458645}, {0.0325344, -0.0406433}, {-0.291688, -0.668966}, {-0.293377, 0.200877}, {0.0872035, -0.300384}, {-0.126752, -0.0652321}, {0.32639, -0.354115}, {-0.118667, -0.0296938}, {0.0921419, -0.0052039}, {0.176875, -0.261733}, {-0.211305, -0.377707}, {-0.244906, -0.117421}, {0.131906, -0.231257}, {-0.226367, -0.300216}, {-0.0523459, -0.0564067}, {-0.152676, -0.0862074}, {0.45413, -0.255086}, {-0.214264, 0.0149354}, {-0.348724, -0.236622}, {0.18863, 0.0902471}, {0.0946429, -0.369053}, {-0.139678, 0.180053}, {0.339177, 0.428589}, {-0.680122, 0.816845}, {-0.1051, 0.301563}, {-0.21585, 0.398383}, {0.0787089, 0.179141}, {0.131379, -0.406538}, {-0.138723, -0.237816}, {-0.414038, -0.300215}, {-0.00579311, 0.140721}, {0.377495, 0.124868}, {0.277525, -0.00581199}, {-0.00105001, 0.210427}, {-0.403606, -0.144497}, {0.138865, -0.108951}, {-0.00572968, -0.46874}, {0.0513771, 0.834993}, {-0.402887, 0.554999}, {0.139277, -0.0421957}, {-0.2141, -0.0737158}, {0.637519, 0.443107}, {0.171493, 0.231655}, {0.107585, -0.52031}, {-0.184412, 0.592536}, {-0.304793, -0.173966}, {-0.330533, 0.208904}, {-0.536693, 0.207242}, {0.0222839, -0.145728}, {-0.0438305, -0.22662}, {-0.25017, -0.190139}, {-0.0978197, -0.166868}, {0.320664, 0.397116}, {-0.209433, -0.33828}, {0.691938, 0.0618412}, {-0.204754, 0.0869387}, {-0.268033, -0.416944}, {-0.311237, 0.913321}, {0.303166, -0.0326375}, {0.526105, -0.308899}, {0.203567, -0.0583557}, {-0.367572, -0.316268}, {-0.355118, 0.417892}, {-0.0325893, 0.211415}, {0.129199, 0.33038}, {0.147927, 0.38163}, {0.217991, -0.57758}, {0.0599504, -0.614113}, {0.189674, -0.230958}, {-0.00577017, 0.145131}, {-0.0840604, 0.701295}, {0.184533, -0.0905295}, {-0.332229, 0.531308}, {0.140214, 0.0790719}, {-0.0539553, -0.348302}, {-0.204117, 0.329624}, {-0.0577496, -0.207515}, {0.143053, -0.202603}, {-0.113684, -0.14043}, {-0.292703, -0.31509}, {-0.27956, 0.290686}, {-0.431423, 0.0921798}, {0.693946, -0.0497303}, {-0.278269, 0.596251}, {0.284775, 0.110315}, {-0.0505857, -0.178531}, {0.263829, 0.32108}, {0.126436, -0.265824}, {-0.0659728, 0.0639083}, {-0.0686681, 0.576303}, {-0.249924, -0.298141}, {-0.26565, 0.214924}, {-0.00199823, 0.119311}, {-0.28136, -0.344417}, {0.172323, -0.333951}, {-0.0600526, 0.140833}, {0.246879, -0.122116}, {-0.227756, -0.169634}, {0.611577, 0.155294}, {-0.0325263, 0.225622}, {-0.100539, -0.129337}, {0.0719774, -0.160883}, {-0.0610577, 0.202208}, {-0.381452, 0.740779}, {-0.0688967, 0.0563059}, {0.278544, -0.368095}, {0.182322, -0.125619}, {-0.336773, 0.109986}, {-0.00300727, -0.241472}, {0.282369, 0.396391}, {0.243089, 0.264414}, {0.105989, 0.021609}, {0.459497, -0.147025}, {-0.0967267, 0.457901}, {0.0599146, 0.0833625}, {-0.380702, -0.245899}, {-0.11736, -0.156523}, {-0.188828, -0.346019}, {0.0291499, 0.0492694}, {-0.248332, 0.0209133}, {0.207032, 0.249973}, {-0.327004, -0.337998}, {0.239091, -0.0826812}, {0.165528, 0.0229934}, {-0.0704271, -0.354391}, {-0.355012, -0.00789628}, {-0.00904445, -0.321471}, {-0.154582, 0.0563471}, {-0.0998327, 0.417871}, {0.179462, 0.204259}, {0.171612, -0.340527}, {0.0987879, -0.021639}, {0.408124, -0.392754}, {-0.29553, -0.180397}, {0.0172622, 0.530078}, {0.494139, 0.387868}, {0.0633331, -0.447849}, {0.323442, 0.171646}, {0.0011591, -0.119238}, {-0.386863, -0.413784}, {-0.350209, -0.293942}, {0.0592791, -0.242182}, {0.0159429, -0.499211}, {0.00347391, -0.0822515}, {0.0778841, 0.166737}, {-0.31605, -0.136789}, {0.0853006, 0.0405652}, {0.0924784, 0.233551}, {0.392994, -0.0436539}, {-0.00564022, -0.234583}, {-0.438527, -0.2398}, {-0.2787, 0.00672838}, {-0.504735, -0.288054}, {-0.068455, 0.050758}, {0.317123, 0.312859}, {-0.126212, -0.0991331}, {0.0410219, 0.599542}, {-0.120437, -0.402692}, {-0.0311502, 0.231111}, {0.064143, -0.0770969}, {-0.313295, 0.137266}, {-0.155287, -0.345281}, {0.110554, -0.0837015}, {0.230533, -0.181699}, {-0.200509, 0.324729}, {-0.216151, -0.111738}, {-0.197783, -0.0198904}, {0.314802, -0.776407}, {0.428145, -0.199933}, {-0.243317, -0.678574}, {0.308296, -0.0844128}, {0.422487, -0.391622}, {0.363268, -0.268887}, {-0.476963, 0.178816}, {-0.0554742, -0.47375}, {0.293225, -0.390586}, {-0.171953, 0.24093}, {-0.206445, 0.366555}, {0.0108495, 0.0635734}, {-0.152814, 0.593807}, {-0.0146745, -0.507205}, {0.0371702, 0.0368828}, {0.37196, 0.438803}, {-0.368657, 0.110948}, {-0.248599, -0.397417}, {0.118341, -0.100229}, {-0.115636, 0.0565032}, {-0.0130878, 0.180941}, {0.0125218, -0.217295}, {0.452532, -0.0607088}, {-0.460369, -0.246245}, {0.0137537, 0.193326}, {-0.0836826, 0.21432}, {0.136013, 0.272683}, {0.322636, 0.00332897}, {0.0673261, -0.384548}, {-0.669496, 0.46029}, {-0.433961, 0.19165}, {0.114354, -0.0350532}, {-0.333227, -0.253755}, {-0.205034, -0.0294251}, {0.254628, -0.0233695}, {0.0919162, 0.285591}, {0.0707649, 0.20129}, {0.523613, -0.0946861}, {0.0799995, -0.0550723}, {0.155558, 0.121499}, {-0.195025, 0.159675}, {-0.0368078, -0.409562}, {0.359914, 0.275052}, {0.0522304, -0.235074}, {0.371207, -0.476243}, {0.266233, -0.00912914}, {-0.0146441, 0.167282}, {-0.291273, 0.115884}, {-0.379285, 0.35688}, {0.108653, -0.150806}, {0.051416, -0.128103}, {0.288953, -0.467028}, {0.109017, -0.17228}, {-0.244265, -0.120562}, {-0.244932, -0.0121777}, {-0.0569525, 0.054864}, {-0.0781517, 0.504878}, {-0.32927, 0.398505}, {0.249771, -0.253099}, {0.346224, 0.240244}, {0.136655, -0.0318847}, {-0.245903, -0.0938374}, {-0.0346101, 0.214694}, {-0.312398, -0.196016}, {-0.32743, -0.584729}, {-0.0384903, -0.0475314}, {0.0462712, 0.381765}, {0.0228504, -0.523727}, {0.0812898, 0.125218}, {0.136186, 0.109666}, {0.0222754, -0.00555721}, {-0.185456, 0.149458}, {0.331539, 0.082625}, {0.26729, -0.105956}, {-0.158291, 0.234863}, {0.111105, -0.273998}, {0.39895, 0.0605662}, {-0.0607317, 0.0752389}, {0.409582, -0.128295}, {0.520815, 0.00394643}, {0.0976259, -0.52394}, {0.286847, -0.399525}, {0.203109, -0.354508}, {0.466871, -0.345246}, {-0.132787, -0.301476}, {-0.14072, 0.0945742}, {-0.36782, -0.161169}, {0.0847064, 0.284239}, {0.249088, 0.0929535}, {0.17386, 0.0391987}, {0.102331, 0.542833}, {-0.0519347, 0.410073}, {0.141018, 0.229595}, {-0.0113742, -0.492918}, {0.0799877, -0.580894}, {0.242679, -0.505822}, {0.104077, 0.143725}, {0.142791, -0.31994}, {-0.044403, 0.845491}, {0.0356169, 0.113097}, {0.141727, -0.681815}, {-0.260153, 0.0931567}, {-0.11006, -0.315855}, {-0.30125, -0.673236}, {-0.0732706, -0.245572}, {0.220099, 0.0858702}};
double centerVector[][2] = {{0.999546, 0.276568}, {0.259902, 0.411018}, {0.975938, 0.381753}, {0.593321, 0.0392503}, {0.349259, 0.389024}, {0.678475, 0.300138}, {0.0779227, 0.560339}, {0.641929, 0.909674}, {0.96226, 0.407529}, {0.554595, 0.569367}, {0.667464, 0.326847}, {0.585603, 0.538252}, {0.637321, 0.675}, {0.350015, 0.342367}, {0.56183, 0.376097}, {0.656505, 0.418385}, {0.382038, 0.594049}, {0.609067, 0.638658}, {0.592416, 0.690127}, {0.0872713, 0.712376}, {0.866654, 0.292161}, {0.769924, 0.170625}, {0.730836, 0.554951}, {0.581272, 0.771725}, {0.052116, 0.437849}, {0.508591, 0.128908}, {0.533858, 0.544797}, {0.602174, 0.666534}, {0.971985, 0.360153}, {0.250793, 0.403871}, {0.38188, 0.344863}, {0.511377, 0.679747}, {0.38092, 0.802959}, {0.461031, 0.575608}, {0.498505, 0.351716}, {0.198971, 0.454054}, {0.0297386, 0.319583}, {0.361754, 0.747438}, {0.800204, 0.734816}, {0.801335, 0.495852}, {0.236084, 0.435195}, {0.561878, 0.499914}, {0.977552, 0.622522}, {0.789887, 0.430392}, {0.293752, 0.160592}, {0.232517, 0.357379}, {0.593934, 0.890801}, {0.688237, 0.885564}, {0.400887, 0.281251}, {0.223479, 0.644278}, {0.338246, 0.398217}, {-0.0595503, 0.802165}, {0.651216, 0.260881}, {0.818879, 0.348644}, {0.19887, 0.229595}, {0.308318, 0.122687}, {0.801685, 0.347152}, {0.465808, 0.494095}, {0.137344, 0.748659}, {0.456545, 0.597636}, {0.564771, 0.576395}, {0.427737, 0.612544}, {0.569013, 0.439727}, {0.314908, 0.560217}, {0.748908, 0.674427}, {0.126995, 0.321767}, {0.450914, 0.131511}, {0.356588, 0.380912}, {0.375288, 0.459407}, {0.623309, 0.570103}, {0.848294, 0.434279}, {0.374551, 0.348054}, {0.589777, 0.495502}, {0.116218, 0.859671}, {0.668383, 0.15198}, {0.853987, 0.492947}, {0.09563, 0.428727}, {0.555854, 0.217687}, {0.785796, 0.239282}, {0.348615, 0.748799}, {0.627282, 0.27664}, {0.0508773, 0.461905}, {0.302962, 0.561137}, {0.679992, 0.315876}, {0.865579, 0.61321}, {0.701186, 0.79228}, {0.39567, 0.471451}, {0.433058, 0.320635}, {0.558783, 0.897213}, {0.417163, 0.904435}, {0.993097, 0.338416}, {0.319051, 0.685919}, {0.149771, 0.476629}, {0.414956, 0.272873}, {0.441247, 0.167165}, {0.442377, 0.579786}, {0.231762, 0.437265}, {0.279345, 0.72483}, {0.41566, 0.908686}, {0.493971, 0.406322}, {0.886712, 0.486122}, {0.854578, 0.877457}, {0.413495, 0.634575}, {0.721643, 0.410054}, {0.664498, 0.4212}, {0.819515, 0.359096}, {0.42073, 0.33966}, {0.941808, 0.257649}, {0.958771, 0.56287}, {0.728374, 0.448322}, {0.62943, 0.855232}, {0.361185, 0.232682}, {0.525015, 0.4379}, {0.375718, 0.533776}, {0.601986, 0.170119}, {0.678231, 0.407274}, {0.30176, 0.618573}, {0.682823, 0.0505531}, {0.120853, 0.072863}, {0.317768, 0.515802}, {0.350919, 0.244055}, {0.35674, 0.281744}, {0.709638, 0.162506}, {0.565967, 0.549967}, {0.5625, 0.88057}, {0.446425, 0.730394}, {0.447333, 0.528997}, {0.259649, 0.225262}, {0.678694, 0.725447}, {0.591276, 0.584099}, {0.480404, 0.422399}, {0.765503, 0.467371}, {0.193452, 0.330441}, {0.143624, 0.410844}, {0.495957, 0.711923}, {0.162804, 0.486014}, {0.713864, 0.155745}, {0.703132, 0.4887}, {0.512846, 0.543793}, {0.583344, 0.183724}, {0.953253, 0.247959}, {0.686194, 0.666854}, {-0.00533868, 0.235617}, {0.997711, 0.435047}, {0.0191706, -0.0441951}, {0.328192, 0.680177}, {0.860798, 0.375405}, {0.450524, 0.587249}, {0.526703, 0.191826}, {0.936929, 0.170107}, {0.790729, 0.370829}, {0.385981, 0.455249}, {0.653065, 0.79764}, {0.0234731, 0.236471}, {0.577309, 0.531307}, {0.359049, 0.392966}, {0.546942, 0.561991}, {0.225579, 0.689819}, {0.500409, 0.3561}, {0.675779, 0.8556}, {0.621072, 0.694791}, {0.295822, 0.299571}, {0.606348, 0.441302}, {-0.0307404, 0.60968}, {0.492218, 0.393796}, {0.589307, 0.211367}, {0.438454, 0.590435}, {0.358112, 0.411705}, {0.478297, 0.279703}, {0.570863, 0.259313}, {0.26793, 0.460463}, {0.411707, 0.531476}, {0.389238, 0.442997}, {0.669345, 0.632161}, {0.54972, 0.447614}, {0.0897973, 0.570992}, {0.471585, 0.637329}, {-0.286744, 0.388683}, {0.651772, 0.715932}, {0.854695, 0.505406}, {0.557297, 0.0289739}, {0.593463, 0.498273}, {0.88711, 0.542482}, {0.631128, 0.11282}, {0.53178, 0.731427}, {0.169267, 0.81137}, {0.718591, 0.326816}, {0.63162, 0.980455}, {0.133431, 0.571888}, {0.446798, 0.55819}, {0.430216, 0.153299}, {0.524198, 0.23379}, {0.74648, 0.429297}, {0.867664, 0.584521}, {0.581175, 0.333654}, {0.306902, 0.311695}, {0.961523, 0.182745}, {0.72391, 0.748215}, {0.41913, 0.556609}, {0.570704, 0.691257}, {0.673381, 0.376127}, {0.875551, 0.246175}, {0.688591, 0.573888}, {0.683794, 0.382935}, {0.552979, 0.401334}, {0.456888, 0.440971}, {0.299837, 0.464491}, {0.550508, 0.969627}, {0.351484, 0.433997}, {0.307704, 0.411105}, {0.195294, 0.771492}, {0.88399, 0.683177}, {0.889625, 0.272906}, {0.529802, 0.806553}, {0.697469, 0.623455}, {0.651511, 0.571571}, {0.710085, 0.487345}, {0.958107, 0.209375}, {0.715112, 0.355872}, {0.402677, 0.498296}, {0.75505, 0.518282}, {0.836922, 0.20304}, {0.675702, 0.496889}, {0.0904127, 0.901579}, {0.207877, 0.192097}, {0.42938, 0.0973648}, {0.294899, 0.400826}, {0.670051, 0.521885}, {0.0422954, 0.565094}, {0.6279, 0.586911}, {0.37733, 0.386012}, {0.980932, 0.319898}, {0.893519, 0.202027}, {0.689297, 0.318334}, {0.625708, 0.356302}, {0.938581, -0.00569204}, {0.745598, 0.45691}, {0.525484, 0.58349}, {0.822594, 0.561459}, {0.398926, 0.226121}, {0.83274, 0.652743}, {0.394733, 0.403913}, {0.232764, 0.0389127}, {0.512495, 0.617284}, {0.520337, 0.310584}, {0.579993, 0.208317}, {0.659512, 0.573438}, {0.608587, 0.652193}, {0.463591, 0.540397}, {0.713757, 0.844692}, {0.795858, 0.207341}, {0.289514, 0.497518}, {0.612919, 0.249671}, {0.500511, 0.556533}, {0.463731, 0.51573}, {0.841643, 0.501845}, {0.796049, 0.545294}, {0.707669, 0.748378}, {0.297067, 0.857344}, {0.624204, 0.0770202}, {0.389377, 0.623982}, {0.440923, 0.464178}, {0.388758, 0.28105}, {0.465092, 0.722734}, {0.611854, 0.407449}, {0.268255, 0.427563}, {0.682069, 0.689384}, {0.851116, 0.733865}, {0.452025, 0.313252}, {0.667982, 0.357043}, {0.588985, 0.634798}, {0.352435, 0.924806}, {0.457101, 0.0357441}, {0.402344, 0.89127}, {0.0696217, 0.209263}, {0.32719, 0.152368}, {0.44637, 0.693586}, {0.876726, 0.551209}, {0.480703, 0.868951}, {0.600557, 0.540883}, {0.586645, 0.304796}, {0.99421, 0.721219}, {0.317105, 0.573918}, {0.486013, 0.478739}, {0.587961, 0.4586}, {0.297103, 0.418387}, {0.151358, 0.643399}, {0.51279, 0.686904}, {0.709374, 0.533991}, {0.882142, 0.617224}, {0.824436, 0.999993}, {0.201115, 0.617715}, {0.244522, 0.4136}, {0.666359, 0.727958}, {0.697752, 0.594176}, {0.53679, 0.285601}, {0.616419, 0.628136}, {0.45439, 0.349432}, {0.981799, 0.454934}, {0.895762, 0.699108}, {0.808807, 0.85999}, {0.675583, 0.640274}, {0.542489, 0.613398}, {0.256402, 0.751798}, {0.891481, 0.78051}, {0.390586, 0.495272}, {0.807499, 0.697456}, {0.486137, 0.794391}, {-0.184623, 0.974572}, {0.354807, 0.659375}, {0.984647, 0.181294}, {0.57933, 0.776392}, {0.99146, 0.656358}, {0.645685, 0.295449}, {0.457644, 0.21297}, {0.447472, 0.458474}, {0.88897, 0.147114}, {0.490236, 0.289224}, {0.718353, 0.385704}, {0.548828, 0.534924}, {0.642786, 0.533992}, {0.48896, 0.653774}, {0.615359, 0.757008}, {0.165985, 0.683361}, {0.816002, 0.537783}, {0.470433, 0.679287}, {0.0449033, 0.61707}, {0.569291, 0.815307}, {0.466167, 0.38431}, {0.327666, 0.606676}, {0.781993, 0.498003}, {0.47818, 0.411888}, {0.665817, 0.652856}, {0.938021, 0.276077}, {0.93587, 0.461651}, {0.224128, 0.452557}, {0.349279, 0.42203}, {0.342935, 0.438552}, {0.367255, -0.0474128}, {0.576735, 0.467231}, {0.243292, -0.249617}, {0.452269, 0.249115}, {0.476207, 0.977457}, {0.291352, 0.207503}, {0.629768, 0.544169}, {0.62357, 0.59058}, {0.190017, 0.96034}, {0.306973, 0.33447}, {0.724378, 0.417301}, {0.337998, 0.558177}, {0.169512, 0.604169}, {0.0764899, 0.622046}, {0.0122064, 0.59008}, {0.673739, 0.275672}, {0.484967, 0.395319}, {0.50387, 0.855346}, {0.347249, 0.572008}, {0.552386, 0.537717}, {0.681238, 0.403735}, {0.840507, 0.322804}, {0.514051, 0.154917}, {0.405531, 0.527657}, {0.968721, 0.382632}, {0.260046, 0.831088}, {0.0828459, 0.424678}, {0.313456, 0.774426}, {0.654138, 0.375114}, {0.3534, 0.263797}, {0.544893, 0.204642}, {0.313082, 0.518783}, {0.279644, 0.526748}, {0.706882, 0.838987}, {0.450847, 0.557105}, {0.732538, 0.538019}, {0.583985, 0.267319}, {0.955026, 0.015986}, {0.546078, 0.215602}, {0.595009, 0.144743}, {0.69014, 0.268623}, {0.678738, 0.373709}, {0.180289, 0.317707}, {0.718435, 0.235274}, {0.367571, 0.493081}, {0.733552, 0.716309}, {0.531698, 0.570541}, {0.166933, 0.580415}, {0.817598, 0.479073}, {0.97384, 0.531928}, {0.0116302, 0.562971}, {0.208675, 0.337811}, {0.435154, 0.545782}, {0.486975, 0.599006}, {0.380679, 0.312823}, {0.709701, 0.251778}, {0.539817, 0.147472}, {0.493078, 0.742728}, {0.284462, 0.86893}, {0.696788, 0.220155}, {0.462317, 0.884222}, {0.924622, 0.788337}, {0.227759, 0.697428}, {0.526158, 0.945714}, {0.697752, 0.371188}, {0.907872, 0.54564}, {0.470249, 0.162908}, {0.181495, 0.588257}, {0.424232, 0.448505}, {0.496649, 0.449448}, {0.503148, 0.767133}, {0.538514, 0.234695}, {0.825126, 0.63227}, {0.383504, 0.557534}, {0.478452, 0.835138}, {0.302893, 0.844155}, {0.450804, 0.195952}, {0.35239, 0.358781}, {0.698543, 0.736552}, {0.242019, 0.679626}, {0.0876103, 0.56836}, {0.768996, 0.90035}, {0.240047, 0.814193}, {0.960801, 0.701493}, {0.38842, 0.279416}, {0.584212, 0.205261}, {0.510206, 0.403004}, {0.185729, 0.467758}, {0.121447, 0.497764}, {0.282274, 0.421497}, {0.256462, 0.590613}, {0.481474, 0.396235}, {0.537267, 0.908054}, {0.535012, 0.840607}, {0.892454, 0.657974}, {0.0795859, 0.555612}, {0.305869, 0.497369}, {0.481238, 0.747125}, {0.330719, 0.421711}, {0.527536, 0.897672}, {0.358742, 0.211998}, {0.817193, 0.440522}, {0.26503, 0.371341}, {0.783455, 0.721815}, {0.367456, 0.806762}, {0.735365, 0.620594}, {0.780794, 0.903168}, {0.225073, 0.65188}, {0.52582, 0.477133}, {0.906768, 0.268098}, {0.329836, 0.677518}, {0.409831, 0.477256}, {0.339266, 0.300165}, {0.573044, 0.616924}, {0.59364, 0.474385}, {0.440239, 0.302955}, {0.944411, 0.450716}, {0.445513, 0.771792}, {0.374412, 0.331041}, {0.978437, 0.756586}, {0.752631, 0.642914}, {0.543089, 0.526264}, {0.597212, 0.481584}, {0.349496, 0.251118}, {0.261698, 0.352688}, {0.449594, 0.506986}, {0.747867, 0.172791}, {0.138104, 0.210625}, {0.0769963, 0.63087}, {0.285242, 0.262711}, {0.619009, 0.501087}, {0.857968, 0.353899}, {0.481435, 0.700792}, {0.964701, 0.403937}, {0.676353, 0.709326}, {0.505001, 0.287095}, {0.44121, 0.823306}, {0.318597, 0.768479}, {0.583266, 0.428037}, {0.433403, 0.338009}, {0.296219, 0.0261657}, {0.625793, 0.233509}, {0.717742, 0.513955}, {0.743196, 0.440318}, {0.801782, 0.712564}, {0.487217, 0.509829}, {0.772337, 0.832949}, {0.759132, 0.445588}, {0.923722, 0.248332}, {0.409754, 0.855629}, {0.53924, 0.624069}, {0.748459, 0.133426}, {0.341356, 0.470498}, {0.851337, 0.508971}, {0.491351, 0.6076}, {0.587886, 0.229434}, {0.746764, 0.960743}, {0.863868, 0.950604}, {0.99281, 0.631654}, {0.498752, 0.00495334}, {0.370596, 0.569322}, {0.627144, 0.434002}};
double spreads[] = {0.330096, 0.509892, -0.0315093, 0.749374, 0.645724, 0.935403, 0.281256, 0.264204, 0.215791, 0.476508, 0.389566, 0.664644, 0.0938608, 0.373594, 0.726891, 0.660094, 0.42727, 0.656622, 0.584221, 0.575391, 0.701913, 0.321172, 0.613263, 0.570297, 0.341019, 0.05716, 0.312094, 0.366985, 0.814888, 0.914797, 0.840091, 0.83703, 0.538859, 0.664714, 0.171501, 0.217639, 0.698581, 0.583892, 0.229224, 0.348157, 0.428288, -0.0748856, 0.477254, 0.857267, 0.302584, 0.342576, 0.717614, 0.594461, 0.475954, 0.62953, 0.320713, 0.186393, 0.435803, 0.296576, 0.470094, 0.617923, 0.166335, 0.11688, 0.769204, 0.573681, 0.318073, 0.404937, 0.454707, 0.539341, 0.274556, 0.124058, 0.522034, 0.514064, 0.878897, 0.221038, 0.177337, 0.526514, 0.376644, 0.697149, 0.295928, 0.259463, 0.651831, 0.439387, 0.561159, 0.934243, 0.0074286, 0.457282, 0.502869, 0.192948, 0.307229, 0.720505, 0.594533, 0.309369, 0.743111, 0.459151, 0.438515, 0.620175, 0.530407, 0.501029, 0.387903, 0.384104, 0.542663, 0.455651, 0.288967, 0.513593, 0.573747, 0.78475, 0.293856, 0.378031, 0.431231, 0.519127, 0.896859, 0.202088, 0.46604, 0.885319, 0.999989, 0.810504, 0.613247, 0.564985, 0.482729, 0.337293, 0.82469, 0.791714, 0.401298, 0.447626, 0.379701, 0.252565, 0.321993, 0.314104, 0.584709, 0.702036, 0.24539, 0.0912851, 0.424369, 0.688431, 0.214743, -0.0243902, 0.743525, 0.49357, 0.479097, 0.593578, 0.429268, 0.771025, 0.415722, 0.368163, 0.300027, 0.290108, 0.523299, 0.341257, 0.683836, 0.502956, 0.234315, 0.0274109, 0.34948, -0.146294, 0.266454, 0.371441, 0.613639, 0.74648, 0.613669, 0.220679, 0.207578, 0.949017, 0.483606, 0.179942, 0.793956, 0.387584, 0.565915, 0.336514, 0.480877, 0.658303, 0.269841, 0.378125, 0.649654, 0.391633, 0.0572166, 0.785069, 0.43547, 0.597653, 0.52448, 0.281009, 0.208554, 0.527723, 0.613823, 0.655326, 0.427279, 0.575311, 0.65644, 0.121387, 0.896189, 0.591874, 0.783794, 0.958056, 0.837883, 0.109995, 0.461324, 0.791691, 0.60711, 0.414203, 0.731857, 0.610605, 0.363965, 0.201937, 0.834135, 0.325974, 0.395714, 0.78679, 0.425851, 0.71429, 0.522105, 0.495605, 0.612946, 0.416865, 0.945743, 0.293617, 0.577858, 0.382325, 0.289793, 0.555752, 0.424408, 0.448369, 0.39188, 0.598266, 0.300868, 0.448331, 0.284569, 0.424288, 0.921489, 0.397589, 0.729616, 0.561786, 0.540691, 0.301187, 0.315308, 0.722223, 0.442516, 0.819798, 0.331623, 0.651679, 0.559697, 0.261566, 0.534378, 0.328648, 0.744206, 0.354403, 0.697882, -0.131236, 0.537162, 0.573168, 0.548787, 0.575309, 0.535429, 0.395174, 0.235054, 0.321061, 0.620536, 0.597051, 0.537453, 0.436266, 0.193593, 0.821311, 0.337615, 0.415082, 0.518704, 0.250602, 0.534101, 0.502039, 0.944156, 0.728927, 0.558259, 0.439618, 0.185008, 0.851295, 0.173161, 0.71376, 0.77147, 0.635249, 0.491697, 0.291856, 0.265967, 0.803299, 0.268929, 0.195931, 0.674968, 0.586136, 0.815365, 0.564992, 0.237665, 0.406196, 0.650361, 0.478713, 0.829967, 0.626522, 0.635541, 0.553066, 0.691092, 0.631715, -0.151641, 0.552338, 0.730346, 0.701376, 0.363594, 0.425363, 0.384386, 0.319549, 0.30989, 0.131489, 0.677026, 0.109817, 0.376013, 0.739199, 0.465708, 0.0880418, 0.284848, 0.337577, 0.180722, -0.0478377, 0.45071, 0.649194, 0.519906, 0.195593, 0.660411, 0.692892, 0.274011, 0.289074, 0.164975, 0.597382, 0.569816, 0.426732, 0.597731, 0.630928, 0.581293, 0.710534, 0.431076, 0.500508, 0.917014, 0.594729, 0.320535, 0.0932942, 0.800915, 0.579955, 0.983298, 0.104912, 0.354654, 0.493851, 0.558715, 0.460713, 0.954073, 0.820625, 0.605534, 0.209107, 0.323787, 0.518906, 0.311273, 0.538328, 0.618318, 0.948075, 0.463093, 0.554789, -0.0945708, 0.700505, 0.108319, 0.0882145, 0.716565, 0.872435, 0.437174, 0.141211, 0.765654, 0.537405, 0.565945, 0.228194, 0.516053, 0.161324, 0.682986, 0.466495, 0.387662, 0.397384, 0.94686, 0.508598, 0.548171, 0.623397, 0.777371, 0.476131, 0.527812, 0.962581, 0.579664, 0.455017, 0.440752, 0.254862, 0.2761, 0.184432, 0.415104, 0.280725, 0.494281, 0.809575, 0.550903, 0.527558, 0.492958, 0.14513, 0.226193, 0.559587, 0.615673, 0.448523, 0.646556, 0.409462, 0.624196, 0.214066, -0.0803877, 0.512413, 0.643592, 0.57098, 0.511209, 0.60831, 0.695027, 0.62382, 0.455253, 0.168468, 0.515458, 0.187469, 0.254242, 0.466211, 0.320872, 0.260554, 0.750667, 0.513297, 0.722994, 0.625785, 0.145626, 0.590037, 0.442717, 0.541314, 0.383428, 0.503159, 0.409526, 0.293064, 0.386335, 0.79757, 0.840131, 0.466368, 0.699054, 0.753085, 0.361663, 0.740789, 0.561422, 0.594984, 0.622407, 0.352074, 0.309495, 0.610715, 0.523238, 0.586274, 0.55573, 0.14432, 0.165594, 0.0638257, 0.570137, 0.323352, 0.652766, 0.541327, 0.171074, 0.0998161, 0.716577, 0.114623, 0.999987, -0.00838491, 0.0883874, 0.355801, 0.49048, 0.406155, 0.311671, 0.143938, 0.59404, 0.220272, 0.582643, 0.833121, 0.501672, 0.167715, 0.613595, 0.313716, 0.575053, 0.911644, 0.524489, 0.173671, 0.78611, 0.182911, 0.918648, 0.728663, 0.509771, 0.90479, 0.631624, 0.323261, 0.332113, 0.667857, 0.0780917, 0.484763, 0.636444, 0.340656, 0.364777, 0.606452, 0.522442, 0.786515, 0.59649, 0.627016, 0.503277, 0.605342};
double biases[] = {0.551742, 0.876024};

double LogisticMap(double x)
{
	return 3.7 * x * (1.0 - x);
}

int main(int argc, char *argv[])
{
    using namespace std;
    
    int dim = 2;
    int dataCount = 500;
    int rbfCount = 500;
    int fireflyCount = 400;
    int maxGeneration = 5000;
    
    int offset = 1;
    int startDataCount = 0;
    
//    random_device random;
//    mt19937 mt(random());
//    uniform_real_distribution<double> score(0.0, dataCount - dim * offset);
    
    vector<double> tmp;
	vector<int> fp;
	Wave wav;
	if(wav.InputWave("/Users/KeisukeKarijuku/Library/Developer/Xcode/DerivedData/FireflyProject-atoglxsngafbinaeredqypibrnpk/Build/Products/Release/sample.wav") != 0)
		return -1;
	wav.StereoToMono();
	wav.GetData(tmp);
	GetFlucPeriod(fp, tmp);
//    std::cout << fp.size() << std::endl;
    
    double max = 0, min = 99999999;
	for (int i = startDataCount; i < dataCount + offset; i++) {
		if (max < fp[i]) max = fp[i];
		if (min > fp[i]) min = fp[i];
	}
	std::vector<double> ffp(fp.size());
	for (int i = startDataCount; i < dataCount + offset; i++) {
		ffp[i] = ((double)fp[i] - min) / (max - min);
	}
    
    vector<vector<double> > input;
    vector<vector<double> > output;
    
    for (int i = 0; i < dataCount; i++) {
        vector<double> tmpVector(dim);
//		for (int j = 0; j < dim; j++) tmpVector[j] = tmp[startDataCount + i + j * offset];
        for (int j = 0; j < dim; j++) tmpVector[j] = ffp[startDataCount + i + j * offset];
		input.push_back(tmpVector);
        
//        for (int j = 0; j < dim; j++) tmpVector[j] = tmp[startDataCount + i + j * offset + 1];
		for (int j = 0; j < dim; j++) tmpVector[j] = ffp[startDataCount + i + j * offset + 1];
		output.push_back(tmpVector);
	}
    
////    //ã­ã¸ã¹ãã£ãã¯ååãä½¿ãã¨ã
//    double x = 0.01;
//    vector<double> tmpVector(1);
//    tmpVector[0] = x;
//    input.push_back(tmpVector);
//    for (int i = 0; i < dataCount; i++) {
//        x = LogisticMap(x);
//        tmpVector[0] = x;
//        if (i < dataCount - 1) {
//            input.push_back(tmpVector);
//        }
//        output.push_back(tmpVector);
//    }
    
    
//    //ãã¼ã¿ããFireflyãä½æ
//    std::vector<std::vector<double>> w;
//    std::vector<double> tmpw(dim);
//    for (int i = 0; i < rbfCount ; i++) {
//        for (int j = 0; j < dim; j++) {
//            tmpw[j] = weights[i][j];
//        }
//        w.push_back(tmpw);
//    }
//    std::vector<std::vector<double>> cv;
//    std::vector<double> tmpcv(dim);
//    for (int i = 0; i < rbfCount ; i++) {
//        for (int j = 0; j < dim; j++) {
//            tmpcv[j] = centerVector[i][j];
//        }
//        cv.push_back(tmpcv);
//    }
//    std::vector<double> s;
//    for (int i = 0; i < rbfCount; i++) {
//        s.push_back(spreads[i]);
//    }
//    std::vector<double> b;
//    for (int i = 0; i < dim; i++) {
//        b.push_back(biases[i]);
//    }
    
    FireflyRBFTraining fireflyRBF(dim, dataCount, rbfCount, fireflyCount, 1.0, 0.1, maxGeneration);
    
//    fireflyRBF.makeFireflyWithRandom();
    fireflyRBF.makeFireflyWithInput(input);
    fireflyRBF.training(input, output);
    
//    fireflyRBF.makeFireflyWithData(w, cv, s, b);
    
    ofstream fireflyOfs("bestFirefly.txt");
    fireflyRBF.outputBestFirefly(fireflyOfs);
    fireflyOfs.close();
    
    ofstream ofs("temp.txt");
    
    vector<double> tmpInput(dim);
    vector<double> tmpInputPushed(dim);
    vector<double> tInput(dim);
    tmpInput = input[0];
    tmpInputPushed = input[0];
    for (int i = 0; i < 100; i++) {
        ofs << i << " " << output[i][0] << " ";
        tmpInput = fireflyRBF.output(tmpInputPushed);
        for (int i = 0; i < dim - 1; i++) {
            tmpInputPushed[i] = tmpInputPushed[i+1];
        }
        tmpInputPushed[dim - 1] = tmpInput[dim - 1];
        ofs << tmpInput[0] << " ";
        tInput = fireflyRBF.output(input[i]);
        ofs << tInput[0];
        ofs << endl;
    };
    
////    //ã­ã¸ã¹ãã£ãã¯ååãä½¿ãã¨ã
//    for (double x = 0; x < 1.0; x += 0.01) {
//        tmpVector[0] = x;
//        ofs << x << " " << LogisticMap(x) << " " << fireflyRBF.output(input[i]) << std::endl;
//    }
    
    ofs.close();
    
    std::system("/opt/local/bin/gnuplot -persist -e \" p 'temp.txt' u 1:2 w l, '' u 1:3 w lp \"");
    
    return 0;
}
